{"version":3,"file":"static/js/3659.73fd1def.chunk.js","mappings":"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","sources":["components/Investor/InvestorHome/Components/Questionnaire/Greeting/Greeting.jsx","components/Investor/SvgIcons/IconSend.jsx","components/Investor/InvestorHome/Components/Questionnaire/UserInput/UserInput.jsx","components/Investor/SvgIcons/IconTick.jsx","components/Investor/InvestorHome/Components/Questionnaire/CurrentQuestion/CurrentQuestion.jsx","components/Investor/InvestorHome/Components/Questionnaire/Categories/Categories.jsx","components/Investor/InvestorHome/Components/Questionnaire/History/History.jsx","components/Investor/InvestorHome/Components/Questionnaire/Questionnaire.jsx","components/Investor/InvestorHome/Components/Questionnaire/MissingDetails.jsx","components/Investor/InvestorHome/Components/UserBio/UserBio.jsx","components/Investor/StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfo.jsx","components/Investor/SvgIcons/IconCloudUpload.jsx","components/Investor/SvgIcons/IconDeleteFill.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Greeting() {\r\n  return (\r\n    <>\r\n      {/* TCH logo */}\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center bg-light rounded-circle shadow-sm border mx-3\"\r\n        style={{ height: \"60px\", width: \"60px\" }}\r\n      >\r\n        <img\r\n          src=\"https://res.cloudinary.com/drjt9guif/image/upload/v1698409124/TheCapitalHub/users/profilePictures/vwy3v5c0tq1hbloqsnlx.webp\"\r\n          alt=\"The Capital HUB profile\"\r\n          height={\"50px\"}\r\n          width={\"50px\"}\r\n          style={{ objectFit: \"cover\" }}\r\n          className=\"rounded-circle\"\r\n        />\r\n      </div>\r\n      {/* Intro */}\r\n      <div className=\"chat_box\">\r\n        <p className=\"m-0\">\r\n          Hello, I am Lupe, Your Capital Hub chat assistant!\r\n        </p>\r\n        <p className=\"m-0\">I am here to help you complete your profile.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function IconSend(props) {\r\n  return (\r\n    <svg\r\n      width=\"40\"\r\n      height=\"40\"\r\n      viewBox=\"0 0 40 40\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6.27418 21.1807L3.06926 34.7512C2.92845 35.3455 3.28579 35.6948 3.4482 35.8178C3.61061 35.9408 4.04129 36.1967 4.58177 35.9035L32.8304 20.5048C33.3286 20.2315 33.3833 19.7603 33.3832 19.5735C33.3859 19.3896 33.3264 18.9312 32.8463 18.6627L4.63047 3.21409C4.0953 2.92151 3.65785 3.17927 3.49559 3.30246C3.33051 3.42848 2.96511 3.78382 3.10097 4.38082L6.28231 18.1797L21.33 18.0919C22.1558 18.0872 22.831 18.7547 22.8371 19.5838C22.8432 20.4129 22.1745 21.0896 21.3487 21.0943L6.27418 21.1807ZM1.21339 37.8395C0.23033 36.8553 -0.171385 35.452 0.155297 34.0596L3.55454 19.6712L0.184974 5.05596C-0.177317 3.47999 0.394872 1.89217 1.68451 0.912343C2.97274 -0.0688994 4.65107 -0.192948 6.06455 0.580187L34.2804 16.0288C35.578 16.7397 36.3764 18.0961 36.3801 19.5761C36.3767 21.0631 35.5658 22.4289 34.2591 23.14L6.01186 38.5372C4.59223 39.3133 2.91375 39.1855 1.63143 38.2043C1.48173 38.0884 1.34333 37.9696 1.21339 37.8395Z\"\r\n        fill=\"white\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport IconSend from \"../../../../SvgIcons/IconSend\";\r\n\r\nexport default function UserInput({\r\n  question,\r\n  answer,\r\n  handleAnswerChange,\r\n  handlePostAnswer,\r\n}) {\r\n  return (\r\n    <form className=\"user_input_container border-top p-3 d-flex align-items-center gap-3\">\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"answer\"\r\n        id=\"answer\"\r\n        placeholder=\"Type here...\"\r\n        className=\"user_input border-0 px-3 py-4 rounded-4\"\r\n        value={question?.options?.length > 0 ? \"\" : answer}\r\n        onChange={handleAnswerChange}\r\n        autoFocus\r\n        rows={1}\r\n        disabled={!question || question?.options?.length > 0}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"send_btn d-flex align-items-center justify-content-center\"\r\n        onClick={handlePostAnswer}\r\n      >\r\n        <IconSend style={{ marginLeft: \"8px\" }} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","// icon:tick | Typicons https://www.s-ings.com/typicons/ | Stephen Hutchings\r\nimport * as React from \"react\";\r\n\r\nfunction IconTick(props) {\r\n  return (\r\n    <svg\r\n      baseProfile=\"tiny\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M16.972 6.251a1.999 1.999 0 00-2.72.777l-3.713 6.682-2.125-2.125a2 2 0 10-2.828 2.828l4 4c.378.379.888.587 1.414.587l.277-.02a2 2 0 001.471-1.009l5-9a2 2 0 00-.776-2.72z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconTick;\r\n","import React from \"react\";\r\nimport IconTick from \"../../../../SvgIcons/IconTick\";\r\nimport SpinnerBS from \"../../../../../Shared/Spinner/SpinnerBS\";\r\n\r\nexport default function CurrentQuestion({\r\n  question,\r\n  answer,\r\n  handleAnswerSelect,\r\n  handleBackToCategories,\r\n  loading,\r\n  handlePostAnswer,\r\n}) {\r\n  return (\r\n    <div className=\"current_question mt-5\">\r\n      {question && (\r\n        <div className=\"chat_box\">\r\n          <p className=\"m-0\">{question.question}</p>\r\n        </div>\r\n      )}\r\n      {/* Options */}\r\n      {question && (\r\n        <div className=\"d-flex gap-3 align-items-center flex-wrap mx-3 \">\r\n          {question?.options?.map((option) => {\r\n            return (\r\n              <button\r\n                key={option}\r\n                type=\"button\"\r\n                className={`position-relative option_button ${\r\n                  (option === answer || answer.includes(option)) && \"selected\"\r\n                }`}\r\n                onClick={(e) => handleAnswerSelect(e, option)}\r\n              >\r\n                {option}\r\n                {(option === answer || answer.includes(option)) && (\r\n                  <div className=\"position-absolute select_badge\">\r\n                    <IconTick />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex align-items-center gap-3 mx-3\">\r\n        {/* Submit button for questions with options */}\r\n        {question?.options.length && (\r\n          <button\r\n            type=\"submit\"\r\n            className=\"option_button back_button align-self-start\"\r\n            onClick={handlePostAnswer}\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n        {/* Go back to categories */}\r\n        {question && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"option_button back_button align-self-start\"\r\n            onClick={handleBackToCategories}\r\n          >\r\n            Back\r\n          </button>\r\n        )}\r\n      </div>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center align-items-center py-3\">\r\n          <SpinnerBS spinnerClass=\"spinner-grow\" colorClass={\"color_main\"} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { OPTIONS } from \"../Questionnaire\";\r\n\r\nexport default function Categories({ option, handleOptionSelect, countData }) {\r\n  return (\r\n    <>\r\n      <div className=\"chat_box\">\r\n        <p className=\"m-0\">\r\n          Start by picking the category to fill your information.\r\n        </p>\r\n      </div>\r\n      <div className=\"chat_box d-flex align-items-start gap-4 p-0 border-0 shadow-none flex-wrap\">\r\n        {(option === \"Company\" || option === null) && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"category_button\"\r\n            onClick={(e) => handleOptionSelect(e, OPTIONS.company)}\r\n          >\r\n            {OPTIONS.company.text} ({countData?.companyQuestionCount})\r\n          </button>\r\n        )}\r\n        {(option === \"Personal\" || option === null) && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"category_button\"\r\n            onClick={(e) => handleOptionSelect(e, OPTIONS.personal)}\r\n          >\r\n            {OPTIONS.personal.text} ({countData?.personalQuestionCount})\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function History({ history }) {\r\n  return (\r\n    <>\r\n      {history?.length > 0 &&\r\n        history?.map((data, index) => {\r\n          return (\r\n            <div className=\"d-flex flex-column gap-3\" key={data.questionId}>\r\n              <div className=\"chat_box\">\r\n                <p className=\"m-0\">{data.question}</p>\r\n              </div>\r\n              <div className=\"answer_box\">\r\n                {!Array.isArray(data.answer) && (\r\n                  <p className=\"m-0\">{data.answer}</p>\r\n                )}\r\n                {Array.isArray(data.answer) &&\r\n                  data.answer.map((text) => (\r\n                    <p className=\"m-0\" key={text}>\r\n                      {text}\r\n                    </p>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport OffcanvasBSContainer from \"../../../../PopUp/OffcanvasBS/OffcanvasBSContainer/OffcanvasBSContainer\";\r\nimport OffcanvasBSHeader from \"../../../../PopUp/OffcanvasBS/OffcanvasBSHeader/OffcanvasBSHeader\";\r\nimport OffcanvasBSBody from \"../../../../PopUp/OffcanvasBS/OffcanvasBSBody/OffcanvasBSBody\";\r\nimport \"./Questionnaire.scss\";\r\nimport Greeting from \"./Greeting/Greeting\";\r\nimport {\r\n  answerQuestionAPI,\r\n  getQuestionsAPI,\r\n} from \"../../../../../Service/user\";\r\nimport UserInput from \"./UserInput/UserInput\";\r\nimport CurrentQuestion from \"./CurrentQuestion/CurrentQuestion\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport History from \"./History/History\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateLoggedInUser } from \"../../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../../Shared/Spinner/SpinnerBS\";\r\n\r\nexport const OPTIONS = {\r\n  company: { text: \"Company\", endpoint: \"Startup\" },\r\n  personal: { text: \"Personal\", endpoint: \"Personal\" },\r\n};\r\n\r\nexport default function Questionnaire({\r\n  countData,\r\n  setCountData,\r\n  handleRefetch,\r\n  isInvestor,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [question, setQuestion] = useState(null);\r\n  // State for company and personal soptions\r\n  const [option, setOption] = useState(null);\r\n  const [alert, setAlert] = useState(null);\r\n  // State for history\r\n  const [history, setHistory] = useState([]);\r\n  // State for loading\r\n  const [loading, setLoading] = useState(false);\r\n  // State for presenting categories\r\n  const [showCategories, setShowCategories] = useState(false);\r\n\r\n  //   Fetch Questions\r\n  async function fetchQuestion(query) {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data, message } = await getQuestionsAPI(query);\r\n      console.log(data, message);\r\n      setQuestion(data);\r\n      setLoading(false);\r\n\r\n      if (!data) {\r\n        setAlert(message);\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n          setOption(null);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Question:\", error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  //   handle Option\r\n  function handleOptionSelect(e, option) {\r\n    // console.log(\"selected categry\", option);\r\n    let endpoint = \"Personal\";\r\n    if (option.text === \"Company\") {\r\n      endpoint = isInvestor ? \"Investor\" : \"Startup\"\r\n    }\r\n    setOption(option.text);\r\n    fetchQuestion(endpoint);\r\n    setShowCategories(false);\r\n  }\r\n\r\n  // Handle answer change\r\n  function handleAnswerChange(e) {\r\n    // Auto resize text area\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + \"px\";\r\n\r\n    // Set Answer\r\n    setAnswer(e.target.value);\r\n  }\r\n\r\n  // Handle Answer Select\r\n  function handleAnswerSelect(e, option) {\r\n    if (answer.includes(option)) {\r\n      // Deselect answer\r\n      let index = answer.indexOf(option);\r\n      setAnswer((prev) => {\r\n        let copy = [...prev];\r\n        copy.splice(index, 1);\r\n        return [...copy];\r\n      });\r\n    } else {\r\n      // Set Answer\r\n      if (question.isMultipleOption) {\r\n        if (!answer) {\r\n          setAnswer([option]);\r\n        } else {\r\n          setAnswer((prev) => {\r\n            let copy = [...prev];\r\n            copy.push(option);\r\n            return [...copy];\r\n          });\r\n        }\r\n      } else {\r\n        setAnswer(option);\r\n      }\r\n    }\r\n  }\r\n\r\n  // handle Post Answer\r\n  async function handlePostAnswer(e) {\r\n    e.preventDefault();\r\n    console.log(\"answer is\", answer);\r\n\r\n    if (!answer) {\r\n      return;\r\n    }\r\n\r\n    // set loading\r\n    setLoading(true);\r\n\r\n    const answerObject = {\r\n      questionId: question._id,\r\n      answer: answer,\r\n    };\r\n\r\n    try {\r\n      const { data } = await answerQuestionAPI(answerObject);\r\n      console.log(\"Response from answerPost\", data);\r\n\r\n      // update history\r\n      setHistory((prev) => {\r\n        let copy = [...prev];\r\n        copy.push({ question: question.question, ...answerObject });\r\n        return [...copy];\r\n      });\r\n\r\n      // If personal, update loggedInUser\r\n      if (question.schema === \"user\") {\r\n        let fieldName = question.fieldName;\r\n        dispatch(updateLoggedInUser({ [fieldName]: answer }));\r\n      }\r\n\r\n      // Clear answer\r\n      setAnswer(\"\");\r\n      // Update count\r\n      setCountData((prev) => {\r\n        if (question.type === \"Startup\") {\r\n          return {\r\n            ...prev,\r\n            companyQuestionCount: countData.companyQuestionCount - 1,\r\n          };\r\n        }\r\n\r\n        if (question.type === \"Personal\") {\r\n          return {\r\n            ...prev,\r\n            personalQuestionCount: countData.personalQuestionCount - 1,\r\n          };\r\n        }\r\n      });\r\n      // fetch next Question\r\n      fetchQuestion(question.type);\r\n    } catch (error) {\r\n      console.error(\"Error posting Question:\", error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // Handle Back to categories\r\n  function handleBackToCategories() {\r\n    setQuestion(null);\r\n    setOption(null);\r\n    setAnswer(\"\");\r\n    setShowCategories(true);\r\n  }\r\n\r\n  //   clear States\r\n  function clearStates() {\r\n    setAnswer(\"\");\r\n    setQuestion(null);\r\n    setOption(null);\r\n    setAlert(null);\r\n    setHistory([]);\r\n    setShowCategories(false);\r\n    handleRefetch();\r\n  }\r\n\r\n  return (\r\n    <div className=\"questionnaire_wrapper\" theme={isInvestor ? \"investor\" : \"startup\"}>\r\n      <OffcanvasBSContainer id=\"questionnaireOffCanvas\">\r\n        <OffcanvasBSHeader onClose={clearStates} />\r\n        <OffcanvasBSBody bodyClass=\"p-0\">\r\n          <div className=\"questionnaire_body_wrapper h-100 pb-4 d-flex flex-column justify-content-end gap-3\">\r\n            <div\r\n              className=\"d-flex flex-column-reverse gap-3 overflow-y-auto chat_col\"\r\n              style={{ scrollbarGutter: \"stable\", overflowAnchor: \"none\" }}\r\n            >\r\n              {/* Alert */}\r\n              {alert && (\r\n                <div className=\"chat_box\">\r\n                  <em className=\"\">{alert}</em>\r\n                </div>\r\n              )}\r\n\r\n              {showCategories && (\r\n                <div className=\"d-flex flex-column gap-3\">\r\n                  <Categories\r\n                    handleOptionSelect={handleOptionSelect}\r\n                    option={option}\r\n                    countData={countData}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* Current Question */}\r\n              {!loading ? (\r\n                <CurrentQuestion\r\n                  question={question}\r\n                  answer={answer}\r\n                  handleAnswerSelect={handleAnswerSelect}\r\n                  handleBackToCategories={handleBackToCategories}\r\n                  loading={loading}\r\n                  handlePostAnswer={handlePostAnswer}\r\n                />\r\n              ) : (\r\n                <div className=\"d-flex justify-content-center align-items-center py-3\">\r\n                  <SpinnerBS\r\n                    spinnerClass=\"spinner-grow\"\r\n                    colorClass={\"color_main\"}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* History */}\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <History history={history} />\r\n              </div>\r\n\r\n              <div className=\" d-flex flex-column justify-content-end gap-3 \">\r\n                <Greeting />\r\n                {/* options */}\r\n                <Categories\r\n                  handleOptionSelect={handleOptionSelect}\r\n                  option={option}\r\n                  countData={countData}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* User Input */}\r\n            <UserInput\r\n              answer={answer}\r\n              question={question}\r\n              handleAnswerChange={handleAnswerChange}\r\n              handlePostAnswer={handlePostAnswer}\r\n            />\r\n          </div>\r\n        </OffcanvasBSBody>\r\n      </OffcanvasBSContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getQuestionCountAPI } from \"../../../../../Service/user\";\r\nimport Questionnaire from \"./Questionnaire\";\r\n\r\nexport default function MissingDetails({ isInvestor = false }) {\r\n  // State for question count\r\n  const [countData, setCountData] = useState(null);\r\n  const [refetch, setRefetch] = useState(false);\r\n\r\n  // Fetch Questions count\r\n  useEffect(() => {\r\n    async function fetchQuestionsCount() {\r\n      try {\r\n        const { data } = await getQuestionCountAPI();\r\n        // console.log(\"count\", data);\r\n        setCountData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching count:\", error);\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    fetchQuestionsCount();\r\n  }, [refetch]);\r\n\r\n  // Handle Refetch count\r\n  function handleRefetch() {\r\n    setRefetch(!refetch);\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-4 shadow-sm lh-1 d-flex flex-column\">\r\n      {countData?.total ? (\r\n        <button\r\n          id=\"missingDetails\"\r\n          className={`btn rounded-4 fs-5 py-3 ${\r\n            isInvestor ? \"border\" : \"border-0\"\r\n          } `}\r\n          data-bs-toggle=\"offcanvas\"\r\n          data-bs-target=\"#questionnaireOffCanvas\"\r\n          aria-controls=\"offcanvasTop\"\r\n          style={{\r\n            color: isInvestor ? \"#000\" : \"#fd5901\",\r\n            backgroundColor: isInvestor ? \"#d3f36b\" : \"#fff\",\r\n          }}\r\n        >\r\n          Add missing details {countData && `(${countData.total})`}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {/* OffCanvas for questionnaire */}\r\n      <Questionnaire\r\n        countData={countData}\r\n        setCountData={setCountData}\r\n        handleRefetch={handleRefetch}\r\n        isInvestor={isInvestor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserAPI } from \"../../../../../Service/user\";\r\nimport {\r\n  loginSuccess,\r\n  selectIsInvestor,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../../Shared/Spinner/SpinnerBS\";\r\nimport InvestorAfterSuccessPopUp from \"../../../../PopUp/InvestorAfterSuccessPopUp/InvestorAfterSuccessPopUp\";\r\nimport ErrorPopUp from \"../../../../PopUp/ErrorPopUp/ErrorPopUp\";\r\n\r\nexport default function UserBio() {\r\n  // Fetch from store\r\n  const userBio = useSelector((state) => state.user.loggedInUser.bio);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const dispatch = useDispatch();\r\n\r\n  // States for Bio\r\n  const [isBioEditable, setIsBioEditable] = useState(false);\r\n  const [bioContent, setBioContent] = useState(userBio || \"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // Submit Bio\r\n  const submitBioHandler = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const {\r\n        data: { data },\r\n      } = await updateUserAPI({ bio: bioContent });\r\n      dispatch(loginSuccess(data));\r\n      setIsBioEditable(!isBioEditable);\r\n      setAlert({ success: \"Changes Saved!\" });\r\n    } catch (error) {\r\n      console.error(\"Error saving bio:\", error);\r\n      setAlert({ error: \"Error saving Bio! Please try again.\" });\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`box personal_information pb-4 ${\r\n          isInvestor ? \"rounded-4 border shadow-sm\" : \"\"\r\n        } `}\r\n      >\r\n        <div className=\"personal_information_header\">\r\n          <h2 className=\"typography\">Bio</h2>\r\n          <span className=\"ms-auto d-flex align-items-center gap-2\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setBioContent(userBio);\r\n                setIsBioEditable(!isBioEditable);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n              <CiEdit />\r\n            </button>\r\n            {isBioEditable && (\r\n              <button\r\n                type=\"submit\"\r\n                className=\"ms-2 d-flex justify-content-center align-items-center gap-2\"\r\n                onClick={() => submitBioHandler()}\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <SpinnerBS spinnerSizeClass=\"spinner-border-sm\" />\r\n                ) : (\r\n                  <>\r\n                    <span>Save</span> <CiSaveUp2 />\r\n                  </>\r\n                )}\r\n              </button>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <div className=\"designation_info\">\r\n            {isBioEditable ? (\r\n              <textarea\r\n                value={bioContent}\r\n                name=\"bio\"\r\n                onChange={(e) => setBioContent(e.target.value)}\r\n                className=\"profile_edit_field\"\r\n                rows={5}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <p className=\"small_typo\">\r\n                {bioContent || \"Click on edit to add bio\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-12 mt-2 designation_see_more\">\r\n      <Link to={\"\"}>See more</Link>\r\n    </div> */}\r\n      </div>\r\n      {alert?.success && (\r\n        <InvestorAfterSuccessPopUp\r\n          successText={alert.success}\r\n          onClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      {alert?.error && (\r\n        <ErrorPopUp message={alert.error} onClose={() => setAlert(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport \"./ProfessionalInfo.scss\";\r\nimport DefaultAvatar from \"../../../../Images/Chat/default-user-avatar.webp\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\nimport {\r\n  postInvestorData,\r\n  postStartUpData,\r\n  updateUserAPI,\r\n} from \"../../../../Service/user\";\r\nimport {\r\n  selectCompanyFounderId,\r\n  selectCompanyName,\r\n  selectIsInvestor,\r\n  loginSuccess,\r\n  updateUserCompany,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport IconCloudUpload from \"../../SvgIcons/IconCloudUpload\";\r\n\r\nexport default function ProfessionalInfo({ theme }) {\r\n  // Fetch Global State\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const companyName = useSelector(selectCompanyName);\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(\"companyName\", companyName);\r\n\r\n  // State for Professional Data\r\n  const [professionalData, setProfessionalData] = useState({\r\n    designation: loggedInUser?.designation || \"\",\r\n    education: loggedInUser?.education || \"\",\r\n    experience: loggedInUser?.experience || \"\",\r\n    profilePicture: loggedInUser.profilePicture || \"\",\r\n    fullName: loggedInUser?.firstName + \" \" + loggedInUser?.lastName || \"\",\r\n    company: companyName,\r\n    location: loggedInUser?.location || \"Bangalore, India\",\r\n  });\r\n\r\n  // State for isEditing\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  // Fetch professional data\r\n  useEffect(() => {\r\n    if (isInvestor) {\r\n      setProfessionalData((prev) => ({ ...prev, company: companyName }));\r\n    } else {\r\n      setProfessionalData((prev) => ({ ...prev, company: companyName }));\r\n    }\r\n  }, [setProfessionalData, companyName, isInvestor]);\r\n\r\n  // Handle Text Change\r\n  function handleTextChange(e) {\r\n    let { name, value } = e.target;\r\n    setProfessionalData((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  }\r\n\r\n  // Handle File change\r\n  function handleFileChange(e) {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  }\r\n\r\n  // Handle Submit\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let editedData = {\r\n      designation: professionalData.designation,\r\n      education: professionalData.education,\r\n      experience: professionalData.experience,\r\n    };\r\n\r\n    try {\r\n      if (selectedFile) {\r\n        const profilePicture = await getBase64(selectedFile);\r\n        editedData = { ...editedData, profilePicture: profilePicture };\r\n      }\r\n      //   console.log(\"from Submit\", editedData, editedCompanyName);\r\n      const {\r\n        data: { data },\r\n      } = await updateUserAPI(editedData);\r\n\r\n      // Set new loggedInUser data\r\n      dispatch(loginSuccess(data));\r\n\r\n      if (isInvestor) {\r\n        let editedCompanyName = {\r\n          founderId: loggedInUser._id,\r\n          companyName: professionalData.company,\r\n        };\r\n        const { data } = await postInvestorData(editedCompanyName);\r\n        // console.log(\"post Investor\", data);\r\n        dispatch(updateUserCompany({ companyName: data.companyName }));\r\n      } else {\r\n        let editedCompanyName = {\r\n          founderId: loggedInUser._id,\r\n          company: professionalData.company,\r\n        };\r\n        const { data } = await postStartUpData(editedCompanyName);\r\n        // console.log(\"post startup\", data.company);\r\n        dispatch(updateUserCompany({ company: data.company }));\r\n      }\r\n\r\n      setIsEditing(false);\r\n      setSelectedFile(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`professional_info_section d-flex flex-column gap-3 p-2 px-md-4 py-4 bg-white shadow-sm ${\r\n        theme === \"investor\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      }`}\r\n    >\r\n      {/* header */}\r\n      <header className=\"p-0 pb-4 border-bottom d-flex flex-column flex-md-row align-items-center justify-content-between\">\r\n        {/* profile picture and name */}\r\n        <div className=\"d-flex gap-4\">\r\n          <img\r\n            src={professionalData.profilePicture || DefaultAvatar}\r\n            alt={professionalData.fullName}\r\n            style={{ width: \"90px\", height: \"90px\", objectFit: \"cover\" }}\r\n            className=\"rounded-circle\"\r\n          />\r\n          <div className=\"d-flex flex-column justify-content-center gap-1 \">\r\n            <h5 className=\"m-0 fw-semibold\">{professionalData.fullName}</h5>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n            <p className=\"m-0\">{professionalData.location}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit button */}\r\n        <span className=\"edit_btn d-flex align-self-end align-md-self-start \">\r\n          <span className=\"ms-auto d-flex flex-md-row flex-column gap-2\">\r\n            <button onClick={() => setIsEditing(!isEditing)}>\r\n              {isEditing ? \"Cancel\" : \"Edit\"}\r\n              <CiEdit />\r\n            </button>\r\n            {isEditing && (\r\n              <button className=\"ms-2\" onClick={handleSubmit}>\r\n                Save <CiSaveUp2 />\r\n              </button>\r\n            )}\r\n          </span>\r\n        </span>\r\n        {/* Edit button end */}\r\n      </header>\r\n\r\n      {/* Info text */}\r\n      {!isEditing && (\r\n        <div className=\"info_text d-flex flex-column gap-3\">\r\n          {/* Company */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Company</h6>\r\n            <p className=\"m-0\">{professionalData.company}</p>\r\n          </div>\r\n\r\n          {/* Designation */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Designation</h6>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n          </div>\r\n\r\n          {/* Education */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Education</h6>\r\n            <p className=\"m-0\">{professionalData.education}</p>\r\n          </div>\r\n\r\n          {/* Experience */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-start\">\r\n            <h6 className=\"m-0\">Experience</h6>\r\n            <p className=\"m-0\">{professionalData.experience}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit form */}\r\n      {isEditing && (\r\n        <form className=\"\">\r\n          {/* profilePicture*/}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Profile Picture</legend>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              name=\"profilePicture\"\r\n              id=\"profilePicture\"\r\n              //   value={professionalData.company}\r\n              onChange={handleFileChange}\r\n            />\r\n            <div className=\"professional_form_input d-flex align-items-center gap-4\">\r\n              <label htmlFor=\"profilePicture\" style={{ cursor: \"pointer\" }}>\r\n                <IconCloudUpload\r\n                  color={theme === \"startup\" ? \"#fd5901\" : \"#b2cc5d\"}\r\n                  height=\"1.75rem\"\r\n                  width=\"1.75rem\"\r\n                />\r\n              </label>\r\n              <p className=\"m-0 fs-6 fw-light\">{selectedFile?.name}</p>\r\n            </div>\r\n          </fieldset>\r\n\r\n          {/* Company */}\r\n          {companyFounderId === loggedInUser._id && isEditing && (\r\n            <fieldset className={` ${theme} `}>\r\n              <legend className=\"px-2\">Company</legend>\r\n              <input\r\n                type=\"text\"\r\n                className=\"professional_form_input\"\r\n                name=\"company\"\r\n                value={professionalData.company}\r\n                onChange={handleTextChange}\r\n              />\r\n            </fieldset>\r\n          )}\r\n\r\n          {/* Designation */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Designation</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"designation\"\r\n              value={professionalData.designation}\r\n              onChange={handleTextChange}\r\n            />\r\n          </fieldset>\r\n\r\n          {/* Education */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Education</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"education\"\r\n              value={professionalData.education}\r\n              onChange={handleTextChange}\r\n            />\r\n          </fieldset>\r\n\r\n          {/* Experience */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Experience</legend>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"experience\"\r\n              value={professionalData.experience}\r\n              onChange={handleTextChange}\r\n              rows={5}\r\n            />\r\n          </fieldset>\r\n        </form>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","// icon:cloud-upload | Bootstrap https://icons.getbootstrap.com/ | Bootstrap\r\nimport * as React from \"react\";\r\n\r\nfunction IconCloudUpload(props) {\r\n  return (\r\n    <svg\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"currentColor\"\r\n        d=\"M4.406 1.342A5.53 5.53 0 018 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 010-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 00-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 010 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"black\"\r\n        d=\"M7.646 4.146a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L8.5 5.707V14.5a.5.5 0 01-1 0V5.707L5.354 7.854a.5.5 0 11-.708-.708l3-3z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconCloudUpload;\r\n","import * as React from \"react\";\r\n\r\nfunction IconDeleteFill(props) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 1024 1024\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconDeleteFill;\r\n"],"names":["Greeting","_jsxs","_Fragment","children","_jsx","className","style","height","width","src","alt","objectFit","IconSend","props","_objectSpread","viewBox","fill","xmlns","fillRule","clipRule","d","UserInput","_ref","_question$options","_question$options2","question","answer","handleAnswerChange","handlePostAnswer","type","name","id","placeholder","value","options","length","onChange","autoFocus","rows","disabled","onClick","marginLeft","baseProfile","CurrentQuestion","handleAnswerSelect","handleBackToCategories","loading","map","option","concat","includes","e","IconTick","SpinnerBS","spinnerClass","colorClass","Categories","handleOptionSelect","countData","OPTIONS","company","text","companyQuestionCount","personal","personalQuestionCount","History","history","data","index","Array","isArray","questionId","endpoint","Questionnaire","setCountData","handleRefetch","isInvestor","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setAnswer","_useState3","_useState4","setQuestion","_useState5","_useState6","setOption","_useState7","_useState8","alert","setAlert","_useState9","_useState10","setHistory","_useState11","_useState12","setLoading","_useState13","_useState14","showCategories","setShowCategories","fetchQuestion","_x","_fetchQuestion","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","_yield$getQuestionsAP","message","wrap","_context","prev","next","getQuestionsAPI","sent","console","log","setTimeout","t0","error","stop","_x2","_handlePostAnswer","_callee2","answerObject","_yield$answerQuestion","fieldName","_context2","preventDefault","abrupt","_id","answerQuestionAPI","copy","_toConsumableArray","push","schema","updateLoggedInUser","_defineProperty","theme","OffcanvasBSContainer","OffcanvasBSHeader","onClose","OffcanvasBSBody","bodyClass","scrollbarGutter","overflowAnchor","indexOf","splice","isMultipleOption","target","scrollHeight","MissingDetails","_ref$isInvestor","refetch","setRefetch","useEffect","_fetchQuestionsCount","_yield$getQuestionCou","getQuestionCountAPI","fetchQuestionsCount","total","color","backgroundColor","UserBio","userBio","useSelector","state","user","loggedInUser","bio","selectIsInvestor","isBioEditable","setIsBioEditable","bioContent","setBioContent","submitBioHandler","_yield$updateUserAPI","updateUserAPI","loginSuccess","success","finish","CiEdit","spinnerSizeClass","CiSaveUp2","InvestorAfterSuccessPopUp","successText","ErrorPopUp","ProfessionalInfo","companyFounderId","selectCompanyFounderId","companyName","selectCompanyName","designation","education","experience","profilePicture","fullName","firstName","lastName","location","professionalData","setProfessionalData","isEditing","setIsEditing","selectedFile","setSelectedFile","handleTextChange","_e$target","_handleSubmit","editedData","editedCompanyName","_yield$postInvestorDa","_data","_editedCompanyName","_yield$postStartUpDat","_data2","getBase64","founderId","postInvestorData","updateUserCompany","postStartUpData","DefaultAvatar","accept","file","files","htmlFor","cursor","IconCloudUpload"],"sourceRoot":""}
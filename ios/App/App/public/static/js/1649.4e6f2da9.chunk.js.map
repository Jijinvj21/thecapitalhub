{"version":3,"file":"static/js/1649.4e6f2da9.chunk.js","mappings":"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","sources":["Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","pages/StartUp/CompanyProfile/CompanyProfilePage.jsx"],"sourcesContent":["var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfilePage.scss\";\r\nimport CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport {\r\n  getStartupByFounderId,\r\n  searchStartUps,\r\n  addStartUpToUser,\r\n  updateUserAPI,\r\n} from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport DefaultAvatar from \"../../../Images/Chat/default-user-avatar.webp\";\r\nimport AfterSuccessPopUp from \"../../../components/PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport {\r\n  selectUserCompanyData,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\n\r\nexport default function CompanyProfilePage() {\r\n  const navigate = useNavigate();\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const userCompanyData = useSelector(selectUserCompanyData);\r\n  const dispatch = useDispatch();\r\n\r\n  const [companyData, setCompanyData] = useState(userCompanyData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userCompanyData) {\r\n      setLoading(true);\r\n      getStartupByFounderId(loggedInUser._id)\r\n        .then(({ data }) => {\r\n          setCompanyData(data);\r\n          dispatch(setUserCompany(data));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          console.error(\"Error fetching startup data:\", error.message);\r\n        });\r\n    }\r\n    document.title = \"Company Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Company\"));\r\n  }, [dispatch, userCompanyData]);\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    // if (newValue.length > 2) {\r\n    searchStartUps(newValue)\r\n      .then(({ data }) => {\r\n        setCompanies(data);\r\n        console.log(data);\r\n      })\r\n      .catch(() => {\r\n        setCompanies([]);\r\n      });\r\n    // }\r\n    setSelectedCompanyId(null);\r\n  };\r\n\r\n  const handleCompanySelection = (companyId, companyName) => {\r\n    setSelectedCompanyId(companyId);\r\n    const searchInput = document.querySelector(\".search-company-input\");\r\n    searchInput.value = companyName;\r\n  };\r\n\r\n  const handleAddStartup = async () => {\r\n    try {\r\n      const response = await addStartUpToUser(\r\n        loggedInUser._id,\r\n        selectedCompanyId\r\n      );\r\n      if (response.status === 200) {\r\n        setShowSuccess(true);\r\n        getStartupByFounderId(loggedInUser._id)\r\n          .then(({ data }) => {\r\n            setCompanyData(data);\r\n            dispatch(setUserCompany(data));\r\n            setSelectedCompanyId(null);\r\n            setCompanies([]);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching startup data:\", error.message);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = async () => {\r\n    try {\r\n      const requestBody = {\r\n        userId: loggedInUser._id,\r\n        startUp: null,\r\n      };\r\n      const response = await updateUserAPI(requestBody);\r\n      console.log(response);\r\n      navigate(\"/company-profile/edit\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"companyProfilePage__wrapper\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <SmallProfileCard text={\"Company Profile\"} />\r\n          <div className=\"edit-container\">\r\n            {!loading && (\r\n              <>\r\n                {companyData?.length !== 0 ? (\r\n                  companyData?.founderId === loggedInUser._id ? (\r\n                    <div className=\"bg-white rounded-4 p-4 shadow-sm\">\r\n                      <Link\r\n                        to=\"/company-profile/edit\"\r\n                        className=\"text-decoration-none text-dark fs-5\"\r\n                      >\r\n                        Edit company details\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"bg-white rounded-4 p-4\">\r\n                      {/* <Link to=\"/company-profile/edit\" className=\"text-decoration-none text-dark fs-5\"> */}\r\n                      <button\r\n                        className=\"btn-base startup\"\r\n                        onClick={handleAddNew}\r\n                      >\r\n                        Add new company details\r\n                      </button>\r\n                      {/* </Link> */}\r\n                      <div className=\"or-text-container\">\r\n                        <p className=\"text-decoration-none text-dark fs-5\">\r\n                          Or\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"text-decoration-none text-dark fs-5\">\r\n                        Choose from an existing Company\r\n                      </p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${selectedCompanyId === company._id\r\n                                    ? \"active\"\r\n                                    : \"\"\r\n                                  }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(\r\n                                    company._id,\r\n                                    company.company\r\n                                  )\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.company}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base startup\"\r\n                          onClick={handleAddStartup}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div className=\"bg-white rounded-4 p-4\">\r\n                    <Link\r\n                      to=\"/company-profile/edit\"\r\n                      className=\"text-decoration-none text-dark fs-5\"\r\n                    >\r\n                      <button className=\"btn-base startup\">\r\n                        Add company details\r\n                      </button>\r\n                    </Link>\r\n                    <div className=\"or-text-container\">\r\n                      <p className=\"text-decoration-none text-dark fs-5\">Or</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-decoration-none text-dark fs-5\">\r\n                        Choose from an existing Company\r\n                      </p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${selectedCompanyId === company._id\r\n                                    ? \"active\"\r\n                                    : \"\"\r\n                                  }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(\r\n                                    company._id,\r\n                                    company.company\r\n                                  )\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.company}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base startup\"\r\n                          onClick={handleAddStartup}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          {!loading ? (\r\n            companyData?.length === 0 ? (\r\n              <div className=\"bg-white rounded-4 p-4\">\r\n                <p>No company found.</p>\r\n              </div>\r\n            ) : (\r\n              <CompanyProfile\r\n                isOnelink={true}\r\n                companyData={companyData}\r\n                startup=\"true\"\r\n              />\r\n            )\r\n          ) : (\r\n            <div className=\"mx-auto w-100 bg-white rounded-4 p-5 d-flex justify-content-center min-vh-100\">\r\n              <div class=\"spinner-grow orange\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n        {showSuccess && (\r\n          <AfterSuccessPopUp\r\n            // withoutOkButton\r\n            onClose={() => setShowSuccess(!showSuccess)}\r\n            successText=\"Company Added Successfully\"\r\n          />\r\n        )}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","dateString","className","text","width","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","CompanyProfilePage","navigate","useNavigate","userCompanyData","selectUserCompanyData","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","companyData","setCompanyData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","companies","setCompanies","_useState7","_useState8","selectedCompanyId","setSelectedCompanyId","_useState9","_useState10","showSuccess","setShowSuccess","useEffect","getStartupByFounderId","_id","then","data","setUserCompany","catch","error","console","message","document","title","setPageTitle","handleSearchInputChange","e","newValue","target","value","searchStartUps","_ref2","log","handleCompanySelection","companyId","companyName","querySelector","handleAddStartup","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","addStartUpToUser","sent","status","_ref4","t0","stop","apply","arguments","handleAddNew","_ref5","_callee2","requestBody","response","_context2","userId","startUp","updateUserAPI","MaxWidthWrapper","children","_jsxs","SmallProfileCard","length","founderId","Link","to","onClick","type","placeholder","onChange","map","company","index","concat","src","logo","DefaultAvatar","alt","class","role","CompanyProfile","isOnelink","startup","RecommendationCard","NewsCorner","AfterSuccessPopUp","onClose","successText"],"sourceRoot":""}
{"version":3,"file":"static/js/8819.593abca4.chunk.js","mappings":"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","sources":["Images/UploadIcon.svg","components/Investor/Documentation/UploadContainer/UploadContainer.js","components/Investor/Documentation/UploadModal/UploadModal.jsx","components/Investor/Documentation/Documentation.js","components/Investor/OneLink/IntroductoryMessage/IntroductoryMessage.js"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgUploadIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 42,\n    height: 44,\n    viewBox: \"0 0 42 44\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 14771\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M20.8328 30.2095C21.2472 30.2095 21.6446 30.0449 21.9376 29.7518C22.2307 29.4588 22.3953 29.0614 22.3953 28.647V5.78658L25.8953 9.87199C26.1649 10.1869 26.5486 10.3819 26.962 10.4139C27.3754 10.4459 27.7845 10.3125 28.0995 10.0428C28.4144 9.77319 28.6093 9.38949 28.6414 8.97613C28.6734 8.56276 28.5399 8.15361 28.2703 7.83866L22.0203 0.546995C21.8736 0.375465 21.6915 0.237748 21.4865 0.143322C21.2815 0.0488953 21.0585 0 20.8328 0C20.6071 0 20.3841 0.0488953 20.1791 0.143322C19.9741 0.237748 19.792 0.375465 19.6453 0.546995L13.3953 7.83866C13.2618 7.99461 13.1603 8.17532 13.0966 8.37049C13.0329 8.56565 13.0083 8.77145 13.0242 8.97613C13.0401 9.1808 13.0961 9.38035 13.1891 9.56337C13.2821 9.7464 13.4102 9.90932 13.5661 10.0428C13.7221 10.1763 13.9028 10.2778 14.0979 10.3415C14.2931 10.4052 14.4989 10.4298 14.7036 10.4139C14.9083 10.398 15.1078 10.342 15.2908 10.249C15.4739 10.1561 15.6368 10.0279 15.7703 9.87199L19.2703 5.78866V28.647C19.2703 29.5095 19.9703 30.2095 20.8328 30.2095Z\",\n    fill: \"#FD5901\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M29.1667 16.1475C27.7042 16.1475 26.9729 16.1475 26.4458 16.4995C26.2192 16.6512 26.0246 16.8458 25.8729 17.0725C25.5208 17.5995 25.5208 18.3308 25.5208 19.7933V28.6475C25.5208 29.8907 25.027 31.0829 24.1479 31.962C23.2688 32.8411 22.0765 33.335 20.8333 33.335C19.5901 33.335 18.3978 32.8411 17.5188 31.962C16.6397 31.0829 16.1458 29.8907 16.1458 28.6475V19.7933C16.1458 18.3308 16.1458 17.5995 15.7937 17.0725C15.6421 16.8458 15.4475 16.6512 15.2208 16.4995C14.6937 16.1475 13.9625 16.1475 12.5 16.1475C6.60833 16.1475 3.66042 16.1475 1.83125 17.9787C-1.24176e-07 19.8079 0 22.7516 0 28.6454V30.7287C0 36.6245 -1.24176e-07 39.5683 1.83125 41.3995C3.66042 43.2308 6.60833 43.2308 12.5 43.2308H29.1667C35.0583 43.2308 38.0062 43.2308 39.8354 41.3995C41.6667 39.5683 41.6667 36.6225 41.6667 30.7308V28.6475C41.6667 22.7537 41.6667 19.8079 39.8354 17.9787C38.0062 16.1475 35.0583 16.1475 29.1667 16.1475Z\",\n    fill: \"#FD5901\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUploadIcon);\nexport default __webpack_public_path__ + \"static/media/UploadIcon.df8cfe224bbb57fbaac61c9e7070cdf7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState } from \"react\";\r\nimport \"./UploadContainer.scss\";\r\nimport UploadIcon from \"../../../../Images/UploadIcon.svg\";\r\nimport PDFIcon from \"../../../../Images/PDFIcon.png\"; // Import your PDF icon\r\nimport axios from \"axios\";\r\nimport AfterSuccessPopUp from \"../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst baseUrl = environment.baseUrl;\r\n\r\nconst UploadContainer = ({ onClicked  }) => {\r\n  const fileInputRef = useRef(null);\r\n  const [isFileOver, setIsFileOver] = useState(false);\r\n  const [thumbnailUrl, setThumbnailUrl] = useState(null);\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopUp(false);\r\n    setThumbnailUrl(\"\");\r\n  };\r\n  const handleFileInputChange = (event) => {\r\n    const file = event.target.files[0];\r\n    handleFile(file);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    setIsFileOver(true);\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    setIsFileOver(false);\r\n    const file = event.dataTransfer.files[0];\r\n    handleFile(file);\r\n  };\r\n\r\n  const handleFile = async (file) => {\r\n    if (file && file.type === \"application/pdf\") {\r\n      console.log(\"Uploaded or Dropped PDF file:\", file);\r\n      try {\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = async () => {\r\n          const arrayBuffer = fileReader.result;\r\n          setThumbnailUrl(PDFIcon);\r\n        };\r\n        fileReader.readAsArrayBuffer(file);\r\n      } catch (error) {\r\n        console.error(\"Error processing PDF:\", error);\r\n        setThumbnailUrl(null);\r\n      }\r\n    } else {\r\n      console.log(\"Invalid file type. Only PDF files are allowed.\");\r\n      setThumbnailUrl(null);\r\n    }\r\n  };\r\n\r\n  const handleImageContainerClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handlePdfUploadClick = async () => {\r\n    if (thumbnailUrl) {\r\n      const data = new FormData();\r\n      data.append(\"file\", fileInputRef.current.files[0]);\r\n      data.append(\"upload_preset\", \"fiverr\");\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/dndcersc4/upload\",\r\n        data,\r\n        { withCredentials: false }\r\n      );\r\n      const requestBody = {\r\n        fileUrl: res.data.url,\r\n        fileName: res.data.original_filename,\r\n        userId: loggedInUser._id,\r\n        folderId: \"64dc89095df364b443f04a20\",\r\n      };\r\n      await axios\r\n        .post(`${baseUrl}/documentation/uploadDocument`, requestBody)\r\n        .then((response) => {\r\n          console.log(\"response\", response);\r\n          if (response.status == 200) {\r\n            setShowPopUp(true);\r\n          }\r\n          const thumbnailUrl = response.data.thumbnailUrl;\r\n          setThumbnailUrl(thumbnailUrl);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error uploading file:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const containerStyle = isFileOver\r\n    ? { border: \"2px dashed #ccc\", backgroundColor: \"#f9f9f9\" }\r\n    : {};\r\n\r\n  return (\r\n    <>\r\n      {thumbnailUrl ? (\r\n        <div\r\n          onClick={() => onClicked(true)}\r\n          className=\"upload_container\"\r\n          style={containerStyle}\r\n        >\r\n          <div className=\"image_container\">\r\n            <img src={PDFIcon} alt=\"Uploaded Thumbnail\" />\r\n          </div>\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            accept=\".pdf\"\r\n            onChange={handleFileInputChange}\r\n          />\r\n\r\n          <p className=\"text text_upload\" onClick={handlePdfUploadClick}>\r\n            Click here to upload this pdf\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => onClicked(true)}\r\n          className=\"upload_container\"\r\n          style={containerStyle}\r\n          onDragOver={handleDragOver}\r\n          onDrop={handleDrop}\r\n          // onClick={handleImageContainerClick}\r\n        >\r\n          <div className=\"image_container\">\r\n            <img src={UploadIcon} alt=\"Upload Icon\" />\r\n          </div>\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            accept=\".pdf\"\r\n            onChange={handleFileInputChange}\r\n          />\r\n\r\n          <p className=\"text\">Click to upload</p>\r\n        </div>\r\n      )}\r\n      {showPopUp && (\r\n        <AfterSuccessPopUp savedFile={true} onClose={handleClosePopup} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadContainer;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport \"./UploadModal.scss\";\r\nimport axios from \"axios\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport AfterSuccessPopUp from \"../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { s3 } from \"../../../../Service/awsConfig\";\r\nimport IconDelete from \"../../SvgIcons/IconDelete\";\r\nimport { getFoldersApi } from \"../../../../Service/user\";\r\n\r\nconst baseUrl = environment.baseUrl;\r\n\r\nconst UploadModal = ({ onCancel, fetchFolder }) => {\r\n  // Fetch loggedInUser from global state\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n\r\n  const [folder, setFolder] = useState(\"pitchdeck\");\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0); // Overall upload progress\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [folderSelector, setFolderSelector] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getFolders = () => {\r\n      getFoldersApi(loggedInUser.oneLinkId)\r\n        .then((data) => {\r\n          const folders = data.data;\r\n          folders.push(\"New Folder\");\r\n          console.log(folders);\r\n          setFolderSelector(folders);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getFolders();\r\n  }, []);\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopUp(false);\r\n    onCancel(false);\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    setFiles([...e.target.files]);\r\n  };\r\n\r\n  const handleRemoveFile = (index) => {\r\n    const filesCopy = [...files];\r\n    filesCopy.splice(index, 1);\r\n    setFiles(filesCopy);\r\n  };\r\n\r\n  function getContentType(fileExtension) {\r\n    const contentTypeMap = {\r\n      txt: \"text/plain\",\r\n      png: \"image/png\",\r\n      jpg: \"image/jpeg\",\r\n      jpeg: \"image/jpeg\",\r\n      pdf: \"application/pdf\",\r\n      pdfxml: \"application/vnd.adobe.pdfxml\",\r\n      docx: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n      xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    };\r\n\r\n    return contentTypeMap[fileExtension] || \"application/octet-stream\";\r\n  }\r\n\r\n  const handlePdfUploadClick = async () => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const timestamp = Date.now();\r\n      const fileName = `${timestamp}_${file.name}`;\r\n      const fileExtension = file.name.split(\".\").pop();\r\n      const contentType = getContentType(fileExtension);\r\n\r\n      const params = {\r\n        Bucket: \"thecapitalhubdocuments\",\r\n        Key: `documents/${fileName}`,\r\n        Body: file,\r\n        ContentDisposition: \"inline\",\r\n        ContentType: contentType,\r\n      };\r\n\r\n      const uploadRequest = s3.upload(params);\r\n\r\n      uploadRequest.on(\"httpUploadProgress\", (progress) => {\r\n        const percent = Math.round((progress.loaded / progress.total) * 100);\r\n        setUploadProgress(percent);\r\n      });\r\n\r\n      try {\r\n        const res = await uploadRequest.promise();\r\n\r\n        const requestBody = {\r\n          fileUrl: res.Location,\r\n          fileName: file.name,\r\n          userId: loggedInUser._id,\r\n          folderName: folder === \"New Folder\" ? folderName : folder,\r\n        };\r\n\r\n        await axios\r\n          .post(`${baseUrl}/documentation/uploadDocument`, requestBody)\r\n          .then((response) => {\r\n            fetchFolder();\r\n            if (response.status === 200) {\r\n              setUploadProgress(0); // Reset progress for the current file\r\n              if (i < files.length - 1) {\r\n                // If there are more files to upload, show progress for the next file\r\n                setUploadProgress(0);\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error uploading file:\", error);\r\n          });\r\n      } catch (error) {\r\n        console.error(\"Error uploading file to S3:\", error);\r\n        alert(\"Failed to Upload files\");\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n    setShowPopUp(true);\r\n    setFiles([]);\r\n  };\r\n\r\n  // Render File list\r\n  const renderFileList = () => (\r\n    <ol className=\"list-group list-group-numbered\">\r\n      {[...files].map((file, index) => {\r\n        return (\r\n          <div\r\n            role=\"button\"\r\n            className=\"list-group-item list-group-item-action file_list_button d-flex align-items-center \"\r\n            key={index}\r\n          >\r\n            <p className=\"text-start uploaded_file_name m-0 lh-1\">\r\n              {file.name}\r\n            </p>{\" \"}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn border-0 ms-auto m-0 p-0\"\r\n              onClick={(e) => handleRemoveFile(e, index)}\r\n            >\r\n              <IconDelete />\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n  return (\r\n    <div className=\"uploadModal\">\r\n      <div className=\"blackbg\" onClick={() => onCancel(false)}></div>\r\n      <div className=\"modalcontainer\">\r\n        <div className=\"modalwrapper\">\r\n          <h1>Select your folder</h1>\r\n\r\n          {/* <select\r\n            onChange={(e) => setFolder(e.target.value)}\r\n            name=\"Folder\"\r\n            id=\"\"\r\n          >\r\n            <option value=\"pitchdeck\">Pitch Deck</option>\r\n            <option value=\"business\">Business</option>\r\n            <option value=\"kycdetails\">KYC Details</option>\r\n            <option value=\"legal and compliance\">Legal and Compliance</option>\r\n            <option value=\"Other\">Other</option>\r\n\r\n          </select> */}\r\n          <select\r\n            onChange={(e) => setFolder(e.target.value)}\r\n            name=\"Folder\"\r\n            id=\"\"\r\n          >\r\n            {folderSelector?.map((item, index) => (\r\n              <option key={index} value={item}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n            {/* <option value=\"Other\">Other</option> */}\r\n          </select>\r\n\r\n          {folder === \"New Folder\" && (\r\n            <input\r\n              className=\"name_input rounded-pill px-3 py-2 \"\r\n              type=\"text\"\r\n              placeholder=\"Enter folder name\"\r\n              value={folderName}\r\n              onChange={(e) => setFolderName(e.target.value)}\r\n            />\r\n          )}\r\n\r\n          {folder && (\r\n            <>\r\n              <div className=\"position-relative d-flex flex-column flex-lg-row align-items-center\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"files\"\r\n                    ref={fileInputRef}\r\n                    multiple\r\n                    accept=\".txt, .png, .jpg, .jpeg, .pdf, .pdfxml, .docx, .xlsx\"\r\n                    onChange={handleFileSelect}\r\n                    className=\"visually-hidden\"\r\n                  />\r\n\r\n                  <label htmlFor=\"files\" className=\"doc_upload_label\">\r\n                    Select Files\r\n                  </label>\r\n                </div>\r\n                {files.length !== 0 && (\r\n                  <pre className=\"ms-lg-3 mt-3 mt-lg-0\">{renderFileList()}</pre>\r\n                )}\r\n              </div>\r\n              <button className=\"upload_button\" onClick={handlePdfUploadClick}>\r\n                Upload\r\n              </button>\r\n            </>\r\n          )}\r\n          {uploadProgress > 0 && uploadProgress < 100 && (\r\n            <div\r\n              className=\"progress\"\r\n              role=\"progressbar\"\r\n              aria-label=\"Upload Progress\"\r\n              aria-valuenow={uploadProgress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n            >\r\n              <div\r\n                className=\"progress-bar bg_orange\"\r\n                style={{ width: `${uploadProgress}%` }}\r\n              >\r\n                {uploadProgress}% Complete\r\n              </div>\r\n            </div>\r\n          )}\r\n          {loading && (\r\n            <div class=\"d-flex justify-content-center my-4\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {}\r\n      {showPopUp && (\r\n        <AfterSuccessPopUp savedFile={true} onClose={handleClosePopup} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Documentation.scss\";\r\nimport SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RightProfileCard from \"../InvestorGlobalCards/RightProfileCard/RightProfileCard\";\r\nimport RecommendationCard from \"../InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport IntroductoryMessage from \"../OneLink/IntroductoryMessage/IntroductoryMessage\";\r\nimport UploadContainer from \"./UploadContainer/UploadContainer\";\r\n// import HalfbendCard from \"../InvestorGlobalCards/Documentation/HalfbendCard/HalfbendCard\";\r\nimport { Card } from \"../../InvestorView\";\r\nimport UploadModal from \"./UploadModal/UploadModal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport {\r\n  Business,\r\n  KYC,\r\n  Legal,\r\n  Pitch,\r\n} from \"../../../Images/StartUp/Documentaion\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFoldersApi } from \"../../../Service/user\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport TutorialTrigger from \"../../Shared/TutorialTrigger/TutorialTrigger\";\r\nimport { startupOnboardingSteps } from \"../../OnBoardUser/steps/startup\";\r\n\r\nconst Documentation = () => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [folderName, setFolderName] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const baseURL = environment.baseUrl;\r\n  const [folders, setFolders] = useState([\r\n    \"Financials\",\r\n    \"Pitch Deck\",\r\n    \"Legal\",\r\n    \"Update\",\r\n    \"KYC Details\",\r\n    \"Business\",\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getFolders = () => {\r\n    setLoading(true);\r\n    getFoldersApi(loggedInUser.oneLinkId)\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        setFolderName(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getFolders(); // Call the getFolders function to fetch data\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Documentation | The Capital Hub\";\r\n    const getFolders = async () => {\r\n      try {\r\n        const res = await axios.get(`${baseURL}`);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getFolders();\r\n    dispatch(setPageTitle(\"Documentation\"));\r\n  }, []);\r\n\r\n  // let imageToShow;\r\n\r\n  // switch (title) {\r\n  //   case 'Title 1':\r\n  //     imageToShow =\r\n  //     break;\r\n  //   // Add more cases for other titles if needed\r\n  //   default:\r\n  //     imageToShow = null;\r\n  // }\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"documentation-wrapper\">\r\n        {/* Main content */}\r\n        <div className=\"left-content\">\r\n          <SmallProfileCard text={\"Documentation\"} />\r\n\r\n          {/* Onboarding popup */}\r\n          <TutorialTrigger steps={startupOnboardingSteps.documentationPage} />\r\n\r\n          <div className=\"documentationStartup\">\r\n            {showModal && (\r\n              <UploadModal onCancel={setShowModal} fetchFolder={getFolders} />\r\n            )}\r\n            <IntroductoryMessage\r\n              title={\"Upload your document\"}\r\n              // para={\r\n              //   \"As the Founder at Capital HUB, Man's all about building great start-ups from a simple idea to an elegant reality. Humbled and honored to have worked with Angels and VC's across the globe to support and grow the startup culture.As the Founder at Capital HUB, Man's all about building great start-ups from a simple idea to an elegant reality. Humbled and honored to have worked with Angels and VC's across the globe to support and grow the startup culture.\"\r\n              // }\r\n            />\r\n            <UploadContainer\r\n              onClicked={setShowModal}\r\n              fetchFolder={getFolders}\r\n            />\r\n            <div className=\"cards px-xxl-4 bg-white py-5 rounded-4\">\r\n              {/* <Card\r\n                  onClicked={() => navigate(\"/documentation/financials\")}\r\n                  text={\"Financials\"}\r\n                /> */}\r\n              {loading && (\r\n                <SpinnerBS\r\n                  className={\r\n                    \"d-flex py-5 justify-content-center align-items-center w-100\"\r\n                  }\r\n                />\r\n              )}\r\n\r\n              {folderName.map((folder, index) => {\r\n                let imageToShow;\r\n                let folderName;\r\n\r\n                switch (folder) {\r\n                  case \"pitchdeck\":\r\n                    imageToShow = Pitch;\r\n                    folderName = \"Pitch Deck\";\r\n                    break;\r\n                  case \"business\":\r\n                    imageToShow = Business;\r\n                    folderName = \"Business\";\r\n                    break;\r\n                  case \"kycdetails\":\r\n                    imageToShow = KYC;\r\n                    folderName = \"KYC Details\";\r\n                    break;\r\n                  case \"legal and compliance\":\r\n                    imageToShow = Legal;\r\n                    folderName = \"Legal And Compliance\";\r\n                    break;\r\n                  default:\r\n                    imageToShow = Pitch;\r\n                    folderName = folder;\r\n                }\r\n\r\n                return (\r\n                  <Card\r\n                    key={index}\r\n                    onClicked={() => navigate(`/documentation/${folder}`)}\r\n                    text={folderName}\r\n                    image={imageToShow}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              {/* <Card\r\n                onClicked={() => navigate(\"/documentation/business\")}\r\n                text={\"Business\"}\r\n                image={Business}\r\n              />\r\n              <Card\r\n                onClicked={() => navigate(\"/documentation/kycdetails\")}\r\n                text={\"KYC Details\"}\r\n                image={KYC}\r\n              />\r\n              <Card\r\n                onClicked={() =>\r\n                  navigate(\"/documentation/legal%20and%20compliance\")\r\n                }\r\n                text={\"Legal and Compliance\"}\r\n                image={Legal}\r\n              /> */}\r\n              {/* <Card\r\n                  onClicked={() => navigate(\"/documentation/update\")}\r\n                  text={\"Update\"}\r\n                /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Right content */}\r\n        <div className=\"right-content\">\r\n          <RightProfileCard />\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n    // <div className=\"container-fluid investorHome_main_container\">\r\n    //   <div className=\"row mt-2\">\r\n    //     <div className=\"col\">\r\n    //       <SmallProfileCard text={\"Documentation\"} />\r\n    //       <div className=\"content-70 mt-3\">\r\n    //         <div className=\"row\">\r\n    //           <div className=\"col-12 mt-2\">\r\n    //             <IntroductoryMessage title={\"Upload your documentation\"} />\r\n    //           </div>\r\n    //         </div>\r\n    //         <div className=\"row\">\r\n    //           <div className=\"col-12 mt-2\">{/* <UploadContainer /> */}</div>\r\n    //         </div>\r\n    //         <div className=\"row\">\r\n    //           {/* <div className=\"col-12 mt-2\"> */}\r\n    //           <HalfbendCard />\r\n    //           {/* </div> */}\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //     <div className=\"col\">\r\n    //       <div className=\"content-30\">\r\n    //         <div className=\"row\">\r\n    //           <RightProfileCard />\r\n    //           <RecommendationCard />\r\n    //           <NewsCorner />\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Documentation;\r\n","import React, { useState } from \"react\";\r\nimport \"./IntroductoryMessage.scss\";\r\nimport Send from \"../../../../Images/Send.svg\";\r\nimport { updateIntroMsgAPI, postInvestorData } from \"../../../../Service/user\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\n\r\nconst IntroductoryMessage = ({\r\n  title,\r\n  image,\r\n  para,\r\n  previous,\r\n  input,\r\n  className,\r\n  isExitClicked,\r\n  setCompany,\r\n  investor = false,\r\n  showPreviousIM = false,\r\n}) => {\r\n  const [newIntroMsg, setNewIntroMsg] = useState(\"\");\r\n  const [newPara, setNewPara] = useState(\"\");\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [showPreviousMessages, setShowPreviousMessages] =\r\n    useState(showPreviousIM);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const togglePreviousMessages = () => {\r\n    setShowPreviousMessages(!showPreviousMessages);\r\n  };\r\n  let top3Previous = [];\r\n  if (previous) {\r\n    const sortedPrevious = [...previous];\r\n    top3Previous = sortedPrevious.slice(-3);\r\n  }\r\n\r\n  const submitNewIMHandler = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const formattedMsg = newIntroMsg.replace(/\\n/g, \"<br/>\");\r\n      if (investor) {\r\n        let updatedMessages = previous;\r\n\r\n        if (previous) {\r\n          updatedMessages = [...previous, formattedMsg];\r\n        } else {\r\n          updatedMessages = [formattedMsg];\r\n        }\r\n        await postInvestorData({\r\n          founderId: loggedInUser._id,\r\n          introductoryMessage: formattedMsg,\r\n          previousIntroductoryMessage: updatedMessages,\r\n        });\r\n      } else {\r\n        console.log(formattedMsg);\r\n        await updateIntroMsgAPI({ introductoryMessage: formattedMsg });\r\n      }\r\n      setNewPara(formattedMsg);\r\n      setCompany((prevCompany) => ({\r\n        ...prevCompany,\r\n        introductoryMessage: formattedMsg,\r\n        previousIntroductoryMessage: [...previous, formattedMsg],\r\n      }));\r\n      setNewIntroMsg(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error updating intro: \", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`introductory_message_container ${className}`}>\r\n      <div className=\"box_container rounded-4 border shadow-sm\">\r\n        <section className=\"title_section\">\r\n          <div\r\n            className={`title_wrapper ${\r\n              !para ? \"title-only-border\" : \"default-border\"\r\n            }`}\r\n          >\r\n            <h6>{title}</h6>\r\n            {para && (\r\n              <button\r\n                className={`toggle-button ${investor ? \"investor\" : \"startup\"}`}\r\n                onClick={togglePreviousMessages}\r\n              >\r\n                {showPreviousMessages\r\n                  ? \"Hide Previous Messages\"\r\n                  : \"Show Previous Messages\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </section>\r\n        {isExitClicked &&\r\n          newPara === \"\" &&\r\n          (para === undefined || para === \"\") && (\r\n            <div className=\"warning_message\">\r\n              Please enter an introductory message.\r\n            </div>\r\n          )}\r\n        {(para || newPara) && (\r\n          <section className=\"text_section\">\r\n            {showPreviousMessages && (\r\n              <>\r\n                <p>\r\n                  <strong>Previous Introductory Message:</strong>\r\n                </p>\r\n                {previous && previous.length > 0 ? (\r\n                  top3Previous?.map((message, index) => (\r\n                    <p\r\n                      key={index}\r\n                      dangerouslySetInnerHTML={{ __html: message }}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <p>No previous introductory messages.</p>\r\n                )}\r\n                <hr />\r\n              </>\r\n            )}\r\n\r\n            <p dangerouslySetInnerHTML={{ __html: newPara || para }} />\r\n          </section>\r\n        )}\r\n        {input && (\r\n          <section className=\"input_section\">\r\n            <div className=\"input_container\">\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"introductoryMessage\"\r\n                placeholder=\"Type your text here\"\r\n                value={newIntroMsg}\r\n                onChange={(e) => setNewIntroMsg(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\" && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    submitNewIMHandler();\r\n                  }\r\n                }}\r\n              />\r\n              <div className=\"right_icons\" onClick={submitNewIMHandler}>\r\n                {loading ? (\r\n                  <SpinnerBS\r\n                    // colorClass={}\r\n                    spinnerSizeClass=\"spinner-border-sm\"\r\n                  />\r\n                ) : (\r\n                  <img src={Send} alt=\"Send\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroductoryMessage;\r\n"],"names":["baseUrl","environment","_ref","onClicked","fileInputRef","useRef","_useState","useState","_useState2","_slicedToArray","isFileOver","setIsFileOver","_useState3","_useState4","thumbnailUrl","setThumbnailUrl","_useState5","_useState6","showPopUp","setShowPopUp","loggedInUser","useSelector","state","user","handleFileInputChange","event","file","target","files","handleFile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fileReader","wrap","_context2","prev","next","type","console","log","FileReader","onload","_callee","_context","result","PDFIcon","stop","readAsArrayBuffer","error","_x","apply","arguments","handlePdfUploadClick","_ref4","_callee3","data","res","requestBody","_context3","FormData","append","current","axios","post","withCredentials","sent","fileUrl","url","fileName","original_filename","userId","_id","folderId","concat","then","response","status","catch","containerStyle","border","backgroundColor","_jsxs","_Fragment","children","onClick","className","style","_jsx","src","alt","ref","display","accept","onChange","onDragOver","preventDefault","onDrop","dataTransfer","UploadIcon","AfterSuccessPopUp","savedFile","onClose","onCancel","fetchFolder","folder","setFolder","setFiles","loading","setLoading","_useState7","_useState8","uploadProgress","setUploadProgress","_useState9","_useState10","_useState11","_useState12","folderName","setFolderName","_useState13","_useState14","folderSelector","setFolderSelector","useEffect","getFoldersApi","oneLinkId","folders","push","getContentType","fileExtension","txt","png","jpg","jpeg","pdf","pdfxml","docx","xlsx","_loop","i","length","abrupt","timestamp","contentType","params","uploadRequest","Date","now","name","split","pop","Bucket","Key","Body","ContentDisposition","ContentType","s3","upload","on","progress","percent","Math","round","loaded","total","promise","Location","t0","alert","delegateYield","e","value","id","map","item","index","placeholder","multiple","_toConsumableArray","htmlFor","role","filesCopy","splice","handleRemoveFile","IconDelete","width","class","showModal","setShowModal","baseURL","navigate","useNavigate","dispatch","useDispatch","getFolders","document","title","get","setPageTitle","MaxWidthWrapper","SmallProfileCard","text","TutorialTrigger","steps","startupOnboardingSteps","documentationPage","UploadModal","IntroductoryMessage","UploadContainer","SpinnerBS","imageToShow","Pitch","Business","KYC","Legal","Card","image","RightProfileCard","RecommendationCard","NewsCorner","_top3Previous","para","previous","input","isExitClicked","setCompany","_ref$investor","investor","_ref$showPreviousIM","showPreviousIM","newIntroMsg","setNewIntroMsg","newPara","setNewPara","showPreviousMessages","setShowPreviousMessages","top3Previous","slice","submitNewIMHandler","formattedMsg","updatedMessages","replace","postInvestorData","founderId","introductoryMessage","previousIntroductoryMessage","updateIntroMsgAPI","prevCompany","_objectSpread","finish","undefined","message","dangerouslySetInnerHTML","__html","onKeyDown","key","shiftKey","spinnerSizeClass","Send"],"sourceRoot":""}
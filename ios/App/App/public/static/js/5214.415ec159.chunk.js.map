{"version":3,"file":"static/js/5214.415ec159.chunk.js","mappings":"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","sources":["Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","components/NewInvestor/InvestorConnection/InvestorConnection.js"],"sourcesContent":["var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./InvestorConnection.scss\";\r\nimport SmallProfileCard from \"../../Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport {\r\n  acceptConnectionAPI,\r\n  cancelConnectionRequestAPI,\r\n  getSentConnectionsAPI,\r\n  getUserConnections,\r\n  pendingConnectionRequestsAPI,\r\n  rejectConnectionAPI,\r\n  removeConnection,\r\n} from \"../../../Service/user\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\n\r\nconst Connection = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"received\"); // Default to \"received\"\r\n  const [receivedConnections, setReceivedConnections] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [getAllConnection, setGetAllConnection] = useState([]); // State for accepted connections\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  // Function to handle tab change\r\n  useEffect(() => {\r\n    getUserConnections(loggedInUser._id).then((res) => {\r\n      console.log(\"res2-->\", res);\r\n      setGetAllConnection(res.data); // Set accepted connections data\r\n    });\r\n    window.title = \"Connections | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Connections\"));\r\n  }, []);\r\n  const handleTabChange = (tab) => {\r\n    if (tab === \"received\") {\r\n      getReceivedConnections();\r\n    } else if (tab === \"accepted\") {\r\n      getUserConnections(loggedInUser._id).then((res) => {\r\n        console.log(\"res-->\", res);\r\n        setGetAllConnection(res.data); // Set accepted connections data\r\n      });\r\n    } else {\r\n      getSentConnection();\r\n    }\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  // Function to get received connections\r\n  const getReceivedConnections = () => {\r\n    setLoading(true);\r\n    pendingConnectionRequestsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  // Function to get sent connections\r\n  const getSentConnection = () => {\r\n    setLoading(true);\r\n    getSentConnectionsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Connections | The Capital Hub\";\r\n    getReceivedConnections();\r\n  }, []);\r\n\r\n  // Function to accept a connection\r\n  const acceptConnectionHandler = async (connectionId) => {\r\n    try {\r\n      await acceptConnectionAPI(connectionId);\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error accepting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to reject a connection\r\n  const rejectConnectionHandler = async (connectionId) => {\r\n    try {\r\n      await rejectConnectionAPI(connectionId);\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error rejecting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to cancel a sent connection request\r\n  const cancelConnectionRequest = async (connectionId) => {\r\n    try {\r\n      await cancelConnectionRequestAPI(connectionId);\r\n      getSentConnection();\r\n    } catch (error) {\r\n      console.log(\"Error cancelling connection: \", error);\r\n    }\r\n  };\r\n\r\n  const showRemoveConfirmation = () => {\r\n    return window.confirm(\"Are you sure you want to remove this connection?\");\r\n  };\r\n\r\n  // removeConnectionHandler\r\n  const handleRemoveConnection = async (userId) => {\r\n    if (showRemoveConfirmation()) {\r\n      try {\r\n        await removeConnection(userId);\r\n        getUserConnections(loggedInUser._id).then((res) => {\r\n          setGetAllConnection(res.data);\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Error removing connection: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"investor_connection_main_container\">\r\n        <SmallProfileCard text={\"Connections\"} />\r\n        <section className=\"content_section mt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mt-2 box  p-4\">\r\n              <h4>Manage Connections</h4>\r\n              <nav className=\"connection_nav\">\r\n                <a\r\n                  href=\"#\"\r\n                  className={`connection_nav_link ${selectedTab === \"received\" ? \"active\" : \"\"\r\n                    }`}\r\n                  onClick={() => handleTabChange(\"received\")}\r\n                >\r\n                  Received\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className={`connection_nav_link ${selectedTab === \"sent\" ? \"active\" : \"\"\r\n                    }`}\r\n                  onClick={() => handleTabChange(\"sent\")}\r\n                >\r\n                  Sent\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className={`connection_nav_link ${selectedTab === \"accepted\" ? \"active\" : \"\"\r\n                    }`}\r\n                  onClick={() => handleTabChange(\"accepted\")}\r\n                >\r\n                  Accepted\r\n                </a>\r\n              </nav>\r\n              <hr />\r\n              <div className=\"connection_list\">\r\n                {loading ? (\r\n                  <h5 className=\"text-center my-5\">\r\n                    <div class=\"d-flex justify-content-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  </h5>\r\n                ) : selectedTab === \"received\" ? (\r\n                  receivedConnections.length ? (\r\n                    receivedConnections.map(\r\n                      ({ sender, updatedAt, _id }, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"connection_item d-flex flex-column flex-md-row justify-content-between \"\r\n                        >\r\n                          {/* Render content for received connections here */}\r\n                          <div className=\"connection_left\">\r\n                            <Link to={`/investor/user/${sender?._id}`}>\r\n                              <img\r\n                                src={sender.profilePicture}\r\n                                alt=\"Connection\"\r\n                              />\r\n                            </Link>\r\n                            <div className=\"body_container\">\r\n                              <p className=\"connection_name h5\">\r\n                                <Link\r\n                                  to={`/investor/user/${sender?._id}`}\r\n                                  className=\" text-black text-decoration-none\"\r\n                                >\r\n                                  {`${sender.firstName} ${sender.lastName}`}\r\n                                </Link>\r\n                              </p>\r\n                              <p className=\"connection_designation\">\r\n                                {sender.designation}\r\n                              </p>\r\n                              <p>\r\n                                <TimeAgo\r\n                                  className=\"connection_time\"\r\n                                  datetime={updatedAt}\r\n                                  locale=\"\"\r\n                                />\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center\">\r\n                            <button\r\n                              onClick={() => rejectConnectionHandler(_id)}\r\n                              className=\"ignore_button\"\r\n                            >\r\n                              Ignore\r\n                            </button>\r\n                            <button\r\n                              onClick={() => acceptConnectionHandler(_id)}\r\n                              className=\"accept_button\"\r\n                            >\r\n                              Accept\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5\">\r\n                      No received connections.\r\n                    </h5>\r\n                  )\r\n                ) : selectedTab === \"sent\" ? (\r\n                  <div className=\"sent_placeholder\">\r\n                    {receivedConnections.length ? (\r\n                      receivedConnections.map(\r\n                        ({ receiver, updatedAt, _id }, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className=\"connection_item py-2 d-flex flex-column flex-md-row justify-content-between \"\r\n                          >\r\n                            {/* Render content for sent connections here */}\r\n                            <div className=\"connection_left\">\r\n                              <Link to={`/investor/user/${receiver?._id}`}>\r\n                                <img\r\n                                  src={receiver?.profilePicture}\r\n                                  alt=\"Connection\"\r\n                                />\r\n                              </Link>\r\n                              <div className=\"body_container\">\r\n                                <p className=\"connection_name h5\">\r\n                                  <Link\r\n                                    to={`/investor/user/${receiver?._id}`}\r\n                                    className=\" text-black text-decoration-none\"\r\n                                  >\r\n                                    {`${receiver?.firstName} ${receiver?.lastName}`}\r\n                                  </Link>\r\n                                </p>\r\n                                <p className=\"connection_designation\">\r\n                                  {receiver?.designation}\r\n                                </p>\r\n                                <p>\r\n                                  <TimeAgo\r\n                                    className=\"connection_time\"\r\n                                    datetime={updatedAt}\r\n                                    locale=\"\"\r\n                                  />\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center\">\r\n                              <button\r\n                                onClick={() => cancelConnectionRequest(_id)}\r\n                                className=\"py-2 px-3 rounded-5\"\r\n                              >\r\n                                Cancel Request\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <h5 className=\"text-center my-5\">No sent connections.</h5>\r\n                    )}\r\n                  </div>\r\n                ) : selectedTab === \"accepted\" ? (\r\n                  // Render content for the \"Accepted\" tab here using getAllConnection\r\n                  getAllConnection.length ? (\r\n                    getAllConnection.map((data, index) => (\r\n                      // console.log(\"data-->\", data)\r\n                      <div\r\n                        key={index}\r\n                        className=\"connection_item d-flex flex-column flex-md-row justify-content-between\"\r\n                      >\r\n                        {/* Render the accepted connection content here */}\r\n                        <div className=\"connection_left\">\r\n                          <Link to={`/investor/user/${data._id}`}>\r\n                            <img src={data.profilePicture} alt=\"Connection\" />\r\n                          </Link>\r\n                          <div className=\"body_container\">\r\n                            <p className=\"connection_name h5\">\r\n                              <Link\r\n                                to={`/investor/user/${data._id}`}\r\n                                className=\" text-black text-decoration-none\"\r\n                              >\r\n                                {`${data.firstName ? data.firstName : \"name\"} ${data.lastName ? data.lastName : \"\"\r\n                                  }`}\r\n                              </Link>\r\n                            </p>\r\n                            <p className=\"connection_designation\">\r\n                              {data.designation ? data.designation : \"\"}\r\n                            </p>\r\n                            <p>\r\n                              {/* <TimeAgo\r\n                                className=\"connection_time\"\r\n                                datetime={data.updatedAt ? data.updatedAt : \"\"}\r\n                                locale=\"\"\r\n                              /> */}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center\">\r\n                          <button\r\n                            onClick={() => handleRemoveConnection(data._id)}\r\n                            className=\"py-2 px-3 rounded-5\"\r\n                          >\r\n                            Remove Connection\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5\">\r\n                      No accepted connections.\r\n                    </h5>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n"],"names":["_ref","dateString","className","text","width","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","_useState","useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","_useState3","_useState4","receivedConnections","setReceivedConnections","_useState5","_useState6","loading","setLoading","_useState7","_useState8","getAllConnection","setGetAllConnection","dispatch","useDispatch","useEffect","getUserConnections","_id","then","res","console","log","data","window","title","setPageTitle","handleTabChange","tab","getReceivedConnections","getSentConnection","pendingConnectionRequestsAPI","catch","err","finally","getSentConnectionsAPI","_ref2","document","acceptConnectionHandler","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","connectionId","wrap","_context","prev","next","acceptConnectionAPI","t0","stop","_x","apply","arguments","rejectConnectionHandler","_ref4","_callee2","_context2","rejectConnectionAPI","_x2","cancelConnectionRequest","_ref5","_callee3","_context3","cancelConnectionRequestAPI","_x3","handleRemoveConnection","_ref6","_callee4","userId","_context4","confirm","removeConnection","_x4","MaxWidthWrapper","children","_jsxs","SmallProfileCard","href","concat","onClick","class","role","length","map","_ref7","index","sender","updatedAt","Link","to","src","profilePicture","alt","firstName","lastName","designation","TimeAgo","datetime","locale","_ref8","receiver"],"sourceRoot":""}
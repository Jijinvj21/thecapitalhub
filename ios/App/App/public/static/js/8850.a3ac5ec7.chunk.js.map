{"version":3,"file":"static/js/8850.a3ac5ec7.chunk.js","mappings":"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","sources":["Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","pages/Investor/InvestorCompanyProfilePage/InvestorCompany.jsx"],"sourcesContent":["var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./InvestorCompany.scss\";\r\nimport CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport {\r\n  getInvestorById,\r\n  searchInvestors,\r\n  addUserAsInvestor,\r\n  updateUserAPI,\r\n} from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport DefaultAvatar from \"../../../Images/Chat/default-user-avatar.webp\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\nimport InvestorAfterSuccessPopUp from \"../../../components/PopUp/InvestorAfterSuccessPopUp/InvestorAfterSuccessPopUp\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport Modal from \"../../../components/PopUp/Modal/Modal\";\r\n\r\nexport default function CompanyProfilePage() {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [companyData, setCompanyData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [confirmModal, setConfirmModal] = useState(false);\r\n  // const [isTrue, setIsTrue] = useState(false);\r\n\r\n\r\n  // const handleClick = () => {\r\n  //   setIsTrue(true);\r\n  //   setTimeout(() => {\r\n  //     setIsTrue(false);\r\n  //   }, 3000);\r\n  // };\r\n\r\n  // Set page title\r\n  useEffect(() => {\r\n    document.title = \"Company Profile | Investors - The Capital Hub\";\r\n    dispatch(setPageTitle(\"Company Profile\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (loggedInUser?.isInvestor === \"true\") {\r\n      setLoading(true);\r\n      getInvestorById(loggedInUser.investor).then(({ data }) => {\r\n        setCompanyData(data);\r\n        setLoading(false);\r\n      })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n          setLoading(false);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        })\r\n    }\r\n  }, [loggedInUser.investor]);\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    console.log(newValue);\r\n    // if (newValue.length > 2) {\r\n    searchInvestors(newValue)\r\n      .then(({ data }) => {\r\n        setCompanies(data);\r\n        console.log(data);\r\n      })\r\n      .catch(() => {\r\n        setCompanies([]);\r\n      });\r\n    // }\r\n    setSelectedCompanyId(null);\r\n  };\r\n\r\n  const handleCompanySelection = (companyId, companyName) => {\r\n    setSelectedCompanyId(companyId);\r\n    const searchInput = document.querySelector(\".search-company-input\");\r\n    searchInput.value = companyName;\r\n  };\r\n\r\n  const handleAddInvestor = async () => {\r\n    try {\r\n      const response = await addUserAsInvestor(\r\n        loggedInUser._id,\r\n        selectedCompanyId\r\n      );\r\n      if (response.status === 200) {\r\n        dispatch(loginSuccess(response.data));\r\n        setShowSuccess(true);\r\n        getInvestorById(selectedCompanyId)\r\n          .then(({ data }) => {\r\n            setCompanyData(data);\r\n            setSelectedCompanyId(null);\r\n            setCompanies([]);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error adding as investor:', error.message);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = async (isTrue) => {\r\n    // const confirmed = window.confirm(\"Are you sure you want to add a new company?\");\r\n    setConfirmModal(false)\r\n\r\n    if (isTrue) {\r\n      try {\r\n        const requestBody = {\r\n          userId: loggedInUser._id,\r\n          investor: null,\r\n        };\r\n        const { data: response } = await updateUserAPI(requestBody);\r\n        dispatch(loginSuccess(response.data));\r\n        navigate(\"/investor/company-profile/edit\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"investor_companyProfilePage__wrapper ps-lg-3\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <SmallProfileCard text={\"Company Profile\"} />\r\n          {/* <div className=\"bg-white rounded-4 p-4 border shadow-sm mt-0 mt-md-3\">\r\n            <Link\r\n              to={\"/investor/company-profile/edit\"}\r\n              className=\"text-decoration-none text-dark fs-5 \"\r\n            >\r\n              Click here to edit company details\r\n            </Link>\r\n          </div> */}\r\n          <div className=\"investor-edit-container\">\r\n            {!loading && (\r\n              <>\r\n                {companyData.length !== 0 ? (\r\n                  // companyData.founderId === loggedInUser._id ? (\r\n                  <>\r\n                    <div className=\"bg-white rounded-4 p-4 shadow-sm border\">\r\n                      <Link\r\n                        to=\"/investor/company-profile/edit\"\r\n                        className=\"text-decoration-none text-dark fs-5\"\r\n                      >\r\n                        Edit company details\r\n                      </Link>\r\n                    </div>\r\n                    <p></p>\r\n                    {/* ) : ( */}\r\n                    <div className=\"bg-white rounded-4 p-4\">\r\n                      {/* <Link to=\"/company-profile/edit\" className=\"text-decoration-none text-dark fs-5\"> */}\r\n                      {/* <button className=\"btn-base investor\" onClick={handleAddNew}>\r\n                        Add new company details\r\n                      </button> */}\r\n                      {/* </Link> */}\r\n                      {/* <div className=\"or-text-container\">\r\n                        <p className=\"text-decoration-none text-dark fs-5\">Or</p>\r\n                      </div> */}\r\n                      <p className=\"text-decoration-none text-dark fs-5\">Choose from an existing Company</p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${selectedCompanyId === company._id\r\n                                  ? \"active\"\r\n                                  : \"\"\r\n                                  }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(\r\n                                    company._id,\r\n                                    company.companyName\r\n                                  )\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.companyName}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base investor\"\r\n                          onClick={handleAddInvestor}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    {/* ) */}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-white rounded-4 p-4\">\r\n                    <Link to=\"/investor/company-profile/edit\" className=\"text-decoration-none text-dark fs-5\">\r\n                      <button className=\"btn-base investor\">Add company details</button>\r\n                    </Link>\r\n                    <div className=\"or-text-container\">\r\n                      <p className=\"text-decoration-none text-dark fs-5\">Or</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-decoration-none text-dark fs-5\">\r\n                        Choose from an existing Company\r\n                      </p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${selectedCompanyId === company._id\r\n                                  ? \"active\"\r\n                                  : \"\"\r\n                                  }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(company._id, company.companyName)\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.companyName}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base investor\"\r\n                          onClick={handleAddInvestor}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* {companyData.length !== 0 ? (\r\n            <CompanyProfile\r\n              isOnelink={true}\r\n              investorData={companyData}\r\n            // startup=\"t\"\r\n            />\r\n          ) : (\r\n            <div className=\"mx-auto w-100 bg-white rounded-4 p-5 d-flex justify-content-center min-vh-100\">\r\n              <div class=\"spinner-grow yellow\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )} */}\r\n          {!loading ? (\r\n            companyData.length === 0 ? (\r\n              <div className=\"bg-white rounded-4 p-4\">\r\n                <p>No company found.</p>\r\n              </div>\r\n            ) : (\r\n              <CompanyProfile\r\n                isOnelink={true}\r\n                investorData={companyData}\r\n                startup=\"false\"\r\n                isStartup=\"false\"\r\n              />\r\n            )\r\n          ) : (\r\n            <div className=\"mx-auto w-100 bg-white rounded-4 p-5 d-flex justify-content-center min-vh-100\">\r\n              <div class=\"spinner-grow yellow\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n         <button className=\"btn-base investor\" onClick={() => setConfirmModal(true)}>\r\n  Create new company profile\r\n</button>\r\n\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n        {showSuccess && (\r\n          <InvestorAfterSuccessPopUp\r\n            // withoutOkButton\r\n            onClose={() => setShowSuccess(!showSuccess)}\r\n            successText=\"Company Added Successfully\"\r\n          />\r\n        )}\r\n      </div>\r\n      {confirmModal &&\r\n      <Modal>\r\n        <div className=\"py-3\">\r\n\r\n        <h4>Are you sure you want to add a new company?</h4>\r\n        <div className=\"d-flex justify-content-center  gap-2 mx-auto py-2\">\r\n        <button className=\"btn btn-danger\" onClick={() => { handleAddNew(true);  }}>Ok</button>\r\n          <button className=\"btn\" style={{ backgroundColor: \"#d3f36b\" }} onClick={() => setConfirmModal(false)}>Cancel</button>\r\n\r\n        </div>\r\n        </div>\r\n\r\n      </Modal>\r\n      }\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","dateString","className","text","width","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","CompanyProfilePage","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","companyData","setCompanyData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","companies","setCompanies","_useState7","_useState8","selectedCompanyId","setSelectedCompanyId","_useState9","_useState10","showSuccess","setShowSuccess","_useState11","_useState12","confirmModal","setConfirmModal","useEffect","document","title","setPageTitle","isInvestor","getInvestorById","investor","then","data","catch","error","console","log","message","finally","handleSearchInputChange","e","newValue","target","value","searchInvestors","_ref2","handleCompanySelection","companyId","companyName","querySelector","handleAddInvestor","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","addUserAsInvestor","_id","sent","status","loginSuccess","_ref4","t0","stop","apply","arguments","handleAddNew","_ref5","_callee2","isTrue","requestBody","_yield$updateUserAPI","_context2","userId","updateUserAPI","_x","_jsxs","MaxWidthWrapper","children","SmallProfileCard","length","Link","to","type","placeholder","onChange","map","company","index","concat","onClick","src","logo","DefaultAvatar","alt","class","role","CompanyProfile","isOnelink","investorData","startup","isStartup","RecommendationCard","NewsCorner","InvestorAfterSuccessPopUp","onClose","successText","Modal","style","backgroundColor"],"sourceRoot":""}
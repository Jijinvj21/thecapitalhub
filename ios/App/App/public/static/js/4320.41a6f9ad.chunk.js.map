{"version":3,"file":"static/js/4320.41a6f9ad.chunk.js","mappings":"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","sources":["Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","pages/Investor/InvestorCompanyProfilePage/EditInvestorCompanyProfilePage.jsx"],"sourcesContent":["var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./EditInvestorCompanyProfilePage.scss\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport CompanyProfileForm from \"../../../components/Investor/CompanyProfilePageComponents/CompanyProfileForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport RaghuImage from \"../../../Images/aboutUs/Raghu.jpeg\";\r\nimport CoinIcon from \"../../../Images/investorView/Rectangle.png\";\r\nimport ColorCard from \"../../../components/Investor/InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport { getInvestorById, postInvestorData } from \"../../../Service/user\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport Milestones from \"../../../components/Investor/CompanyProfilePageComponents/Milestones/Milestones\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport CoreTeam from \"../../../components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeam\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport backIcon from \"../../../Images/Chat/BackIcon.svg\";\r\nimport SpinnerBS from \"../../../components/Shared/Spinner/SpinnerBS\";\r\nimport CompanyDescription from \"../../../components/Investor/CompanyProfilePageComponents/CompanyDescription/CompanyDescription\";\r\nimport ErrorPopUp from \"../../../components/PopUp/ErrorPopUp/ErrorPopUp\";\r\nimport InvestorAfterSuccessPopUp from \"../../../components/PopUp/InvestorAfterSuccessPopUp/InvestorAfterSuccessPopUp\";\r\nimport { setUserCompany } from \"../../../Store/features/user/userSlice\";\r\n\r\nexport default function EditInvestorCompanyProfilePage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n\r\n  const [colorCardData, setColorCardData] = useState(null);\r\n\r\n  const [field, setField] = useState(\"last_round_investment\");\r\n  const [companyData, setCompanyData] = useState([]);\r\n  const [isBioEditable, setIsBioEditable] = useState(false);\r\n  const [companyDescription, setCompanyDescription] = useState(null);\r\n\r\n  // States for popup\r\n  const [showPopup, setShowPopup] = useState({ success: false, error: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSaveAll, setIsSaveAll] = useState(false);\r\n\r\n  // Set page title\r\n  useEffect(() => {\r\n    document.title = \"Edit Company Profile | Investors - The Capital Hub\";\r\n    dispatch(setPageTitle(\"Edit Company\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getInvestorById(loggedInUser.investor)\r\n      .then(({ data }) => {\r\n        setCompanyData(data);\r\n        setCompanyDescription(data.description);\r\n        setColorCardData({\r\n          averageInvestment: data.colorCard.averageInvestment,\r\n          total_investment: data.colorCard.total_investment,\r\n          no_of_investments: data.colorCard.no_of_investments,\r\n          minimumTicketsSize: data.colorCard.minimumTicketsSize,\r\n          maximumTicketsSize: data.colorCard.maximumTicketsSize,\r\n          seedRound: data.colorCard.seedRound,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [isSaveAll]);\r\n\r\n  // handleAmountChange\r\n  const handleAmountChange = (currentfield, updatedAmount) => {\r\n    console.log(field);\r\n    console.log(currentfield);\r\n    setField(currentfield);\r\n    setColorCardData((prevData) => ({\r\n      ...prevData,\r\n      [currentfield]: updatedAmount,\r\n    }));\r\n  };\r\n\r\n  // Handle Description Change\r\n  const handleDescriptionChange = (e) => {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + 3 + \"px\";\r\n\r\n    setCompanyDescription(e.target.value);\r\n  };\r\n\r\n  // Handle Description submit\r\n  const submitBioHandler = async (e) => {\r\n    e.preventDefault();\r\n    // Set Loading\r\n    setLoading(true);\r\n    const companyData = {\r\n      description: companyDescription,\r\n      founderId: loggedInUser._id,\r\n    };\r\n\r\n    try {\r\n      const response = await postInvestorData(companyData);\r\n      if (response.status === 200) {\r\n        setIsBioEditable(false);\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n        setCompanyData((prev) => ({\r\n          ...prev,\r\n          description: companyDescription,\r\n        }));\r\n        dispatch(setUserCompany(response.data));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n      handleShowPopup({ error: true });\r\n    }\r\n  };\r\n\r\n  const handleSaveAll = (e) => {\r\n    setLoading(true);\r\n    submitBioHandler(e);\r\n    setIsSaveAll(true);\r\n    setTimeout(() => {\r\n      setIsSaveAll(false);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  // handle show popup\r\n  const handleShowPopup = (popupType) => {\r\n    setShowPopup((prev) => ({ ...prev, ...popupType }));\r\n    setTimeout(() => {\r\n      handlePopupClose();\r\n    }, 2000);\r\n  };\r\n\r\n  // handle popup close\r\n  const handlePopupClose = () => {\r\n    setShowPopup({ success: false, error: false });\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"editinvestorCompanyProfilePage__wrapper p-3 border-start\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <span className=\"back_img rounded-circle shadow-sm\" title=\"Go Back\">\r\n            <img\r\n              src={backIcon}\r\n              width={20}\r\n              height={20}\r\n              onClick={() => navigate(-1)}\r\n              alt=\"\"\r\n            />\r\n          </span>\r\n          {/* <SmallProfileCard text={\"Company Profile\"} /> */}\r\n          {/* Company profile form */}\r\n\r\n          <div className=\"bg-white rounded-4 p-5 border\">\r\n            <CompanyProfileForm\r\n              companyData={companyData}\r\n              investor={true}\r\n              handleShowPopup={handleShowPopup}\r\n              isSaveAll={isSaveAll}\r\n            />\r\n          </div>\r\n\r\n          {/* Company Description */}\r\n          <CompanyDescription\r\n            companyData={companyData}\r\n            companyDescription={companyDescription}\r\n            setCompanyDescription={setCompanyDescription}\r\n            isBioEditable={isBioEditable}\r\n            setIsBioEditable={setIsBioEditable}\r\n            submitBioHandler={submitBioHandler}\r\n            handleDescriptionChange={handleDescriptionChange}\r\n            loading={loading}\r\n          />\r\n\r\n          {/* Core Team */}\r\n          <div className=\"core__team bg-white rounded-4 p-5 d-flex flex-column gap-4 border\">\r\n            <CoreTeam\r\n              companyData={companyData}\r\n              setCompanyData={setCompanyData}\r\n              theme=\"investor\"\r\n            />\r\n          </div>\r\n\r\n          {/* Milestones */}\r\n          <div className=\"milestones__component bg-white rounded-4 p-5 d-flex flex-column gap-4 border\">\r\n            <Milestones theme={\"investor\"} />\r\n          </div>\r\n\r\n          {/* Color Cards */}\r\n          <div className=\"card_holder d-flex justify-content-between flex-wrap\">\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#BB98FF\"\r\n              text=\"Total Investment\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.total_investment || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"total_investment\", amount)\r\n              }\r\n              field={\"total_investment\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n            />\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#DAC191\"\r\n              text=\"Average Investment\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.averageInvestment || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"averageInvestment\", amount)\r\n              }\r\n              field={\"averageInvestment\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n            />\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#DCDCDC\"\r\n              text=\"No.of Investment\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.no_of_investments || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"no_of_investments\", amount)\r\n              }\r\n              field={\"no_of_investments\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n              noRupee={true}\r\n            />\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#2B2B2B\"\r\n              text=\"Minimum Tickets Size\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.minimumTicketsSize || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"minimumTicketsSize\", amount)\r\n              }\r\n              field={\"minimumTicketsSize\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n              noRupee={true}\r\n            />\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#FF7373\"\r\n              text=\"Maximum Tickets Size\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.maximumTicketsSize || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"maximumTicketsSize\", amount)\r\n              }\r\n              field={\"maximumTicketsSize\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n              noRupee={true}\r\n            />\r\n            <ColorCard\r\n              color=\"white\"\r\n              background=\"#9198DA\"\r\n              text=\"Seed Round\"\r\n              image={CoinIcon}\r\n              amount={colorCardData?.seedRound || \"0\"}\r\n              onAmountChange={(amount) =>\r\n                handleAmountChange(\"seedRound\", amount)\r\n              }\r\n              field={\"seedRound\"}\r\n              colorCardData={colorCardData}\r\n              isInvestor={true}\r\n              noRupee={true}\r\n            />\r\n          </div>\r\n          <button\r\n            className={`align-self-end btn-base investor`}\r\n            onClick={handleSaveAll}\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={\"text-dark\"}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : (\r\n              \"Save all\"\r\n            )}\r\n          </button>\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard isInvestor={true} />\r\n        </div>\r\n\r\n        {/* Popups */}\r\n        {showPopup.success && (\r\n          <InvestorAfterSuccessPopUp\r\n            successText={\"Changes Saved\"}\r\n            onClose={handlePopupClose}\r\n          />\r\n        )}\r\n        {showPopup.error && (\r\n          <ErrorPopUp\r\n            message={\"Error While Saving! Please try again\"}\r\n            onClose={handlePopupClose}\r\n          />\r\n        )}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","dateString","className","text","width","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","EditInvestorCompanyProfilePage","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","colorCardData","setColorCardData","_useState3","_useState4","field","setField","_useState5","_useState6","companyData","setCompanyData","_useState7","_useState8","isBioEditable","setIsBioEditable","_useState9","_useState10","companyDescription","setCompanyDescription","_useState11","success","error","_useState12","showPopup","setShowPopup","_useState13","_useState14","loading","setLoading","_useState15","_useState16","isSaveAll","setIsSaveAll","useEffect","document","title","setPageTitle","getInvestorById","investor","then","data","description","averageInvestment","colorCard","total_investment","no_of_investments","minimumTicketsSize","maximumTicketsSize","seedRound","catch","console","log","handleAmountChange","currentfield","updatedAmount","prevData","_objectSpread","_defineProperty","submitBioHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","founderId","_id","postInvestorData","sent","status","handleShowPopup","setUserCompany","t0","stop","_x","apply","arguments","popupType","setTimeout","handlePopupClose","MaxWidthWrapper","children","_jsxs","src","backIcon","height","onClick","alt","CompanyProfileForm","CompanyDescription","handleDescriptionChange","target","style","scrollHeight","value","CoreTeam","theme","Milestones","ColorCard","color","background","image","CoinIcon","amount","onAmountChange","isInvestor","noRupee","SpinnerBS","colorClass","spinnerSizeClass","RecommendationCard","InvestorAfterSuccessPopUp","successText","onClose","ErrorPopUp","message"],"sourceRoot":""}